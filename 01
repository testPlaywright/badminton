name: Cypress E2E Test Run

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      target_env:
        description: 'Select environment to test'
        required: true
        default: 'DEV'
        type: choice
        options:
          - DEV
          - TEST

permissions:
  contents: read
  actions: read

jobs:
  test:
    runs-on: uhg-runner

    strategy:
      matrix:
        include:
          - ENV_NAME: DEV
            ROLE_NAME: analyst
          - ENV_NAME: TEST
            ROLE_NAME: admin
          - ENV_NAME: TEST
            ROLE_NAME: analyst

    steps:
      - name: Skip non-selected environment (manual trigger only)
        if: github.event_name == 'workflow_dispatch' && matrix.ENV_NAME != github.event.inputs.target_env
        run: echo "Skipping environment ${{ matrix.ENV_NAME }} because target_env is ${{ github.event.inputs.target_env }}."
        shell: bash

      - name: Cleanup
        run: sudo chown -R $USER:$USER $GITHUB_WORKSPACE

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Installing Cypress Dependencies and xvfb
        if: runner.os == 'Linux'
        run: |
          wget https://repo1.uhc.com/artifactory/security-ubuntu-cache/ubuntu/pool/main/x/xorg-server/xserver-common_21.1.4-2ubuntu1.7~22.04.9_all.deb -O /tmp/xserver-common.deb
          wget https://repo1.uhc.com/artifactory/security-ubuntu-cache/ubuntu/pool/universe/x/xorg-server/xvfb_21.1.3-2ubuntu2.9_amd64.deb -O /tmp/xvfb.deb
          sudo apt-get update
          sudo apt-get install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libnss3 libxss1 libasound2t64 libxtst6 xauth /tmp/xserver-common.deb /tmp/xvfb.deb
          rm /tmp/xserver-common.deb /tmp/xvfb.deb

      - name: npm Install
        run: |
          npm config set registry https://repo1.uhc.com/artifactory/api/npm/npm-virtual/
          npm install

      - name: Set Environment Variables
        run: |
          if [ "${{ matrix.ENV_NAME }}" = "DEV" ]; then
            echo "BASE_URL=${{ secrets.DEV_BASE_URL }}" >> $GITHUB_ENV
            echo "USERNAME=${{ secrets.DEV_ANALYST_USERNAME }}" >> $GITHUB_ENV
            echo "PASSWORD=${{ secrets.DEV_ANALYST_PASSWORD }}" >> $GITHUB_ENV
          elif [ "${{ matrix.ENV_NAME }}" = "TEST" ]; then
            echo "BASE_URL=${{ secrets.TEST_BASE_URL }}" >> $GITHUB_ENV
            if [ "${{ matrix.ROLE_NAME }}" = "admin" ]; then
              echo "USERNAME=${{ secrets.TEST_ADMIN_USERNAME }}" >> $GITHUB_ENV
              echo "PASSWORD=${{ secrets.TEST_ADMIN_PASSWORD }}" >> $GITHUB_ENV
            else
              echo "USERNAME=${{ secrets.TEST_ANALYST_USERNAME }}" >> $GITHUB_ENV
              echo "PASSWORD=${{ secrets.TEST_ANALYST_PASSWORD }}" >> $GITHUB_ENV
            fi
          fi

      - name: Create Cypress Reports Directory
        id: date
        if: always()
        run: |
          REPORT_DATE=$(date +'%Y-%m-%d')
          REPORT_PATH="cypress/reports/${{ matrix.ENV_NAME }}/${{ matrix.ROLE_NAME }}/${REPORT_DATE}"
          mkdir -p "$REPORT_PATH"
          echo "REPORT_DATE=$REPORT_DATE" >> $GITHUB_ENV
          echo "REPORT_PATH=$REPORT_PATH" >> $GITHUB_ENV
          echo "::set-output name=date::$REPORT_DATE"

      - name: Run Cypress Tests for ${{ matrix.ROLE_NAME }} in ${{ matrix.ENV_NAME }}
        run: |
          if [ "${{ matrix.ROLE_NAME }}" = "admin" ]; then
            echo "Running ALL tests (admin + analyst folders)"
            npx cypress run --spec "cypress/e2e/admin/features/**/*.feature,cypress/e2e/analyst/features/**/*.feature" --env BASE_URL=$BASE_URL,USERNAME=$USERNAME,PASSWORD=$PASSWORD,REPORT_PATH=$REPORT_PATH
          else
            echo "Running analyst-only tests"
            npx cypress run --spec "cypress/e2e/analyst/features/**/*.feature" --env BASE_URL=$BASE_URL,USERNAME=$USERNAME,PASSWORD=$PASSWORD,REPORT_PATH=$REPORT_PATH

      - name: Final Summary
        run: echo "âœ… Cypress Tests Completed Successfully on ${{ matrix.ENV_NAME }} as ${{ matrix.ROLE_NAME }}"

      - name: Cypress Reports with Screenshots
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: report-${{ matrix.ENV_NAME }}-${{ matrix.ROLE_NAME }}
          path: |
            ./cypress/screenshots
            ${{ env.REPORT_PATH }}
